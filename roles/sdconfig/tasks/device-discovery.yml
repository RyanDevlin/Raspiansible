- block: # Block for automatic device discovery
  - name: Gather device facts
    set_fact:
      install_target: "{{ lookup('dict', {item: { 'model': ansible_devices[item]['model'], 'host': ansible_devices[item]['host'], 'size': ansible_devices[item]['size'] } } ) }}"
    with_items: "{{ ansible_facts['devices'] }}"
    when: 
      - '"loop" not in item' # We don't care about loop devices
      - ansible_devices[item]['removable'] == "1" # The SD card should show up with this flag set
      - item in common_devices
      - "'usb' in ansible_devices[item]['model'] | lower or 'usb' in ansible_devices[item]['host'] | lower or 'usb' in ansible_devices[item]['links']['ids'] | lower"
    # This is needed when the loop above doesn't execute due to the when clause
  - fail:
      msg: "Failed locating suitable device to install on. Please override the 'manual_install_target' variable with a device path such as '/dev/sda'"
    when: install_target is not defined
  when: manual_install_target == ''

- set_fact:
    install_target: "{{ manual_install_target }}"
  when: manual_install_target != ''

- debug:
    msg: 
      - "==========================================================="
      - "The following devices have been found on this machine:"
      - "==========================================================="
    verbosity: 1
- debug:
    msg: "{{ install_target }}"
    verbosity: 1

#- block:
#  - pause:
#      prompt: "Do you wish to continue with the installation (y/n)?"
#    register: selection
#    delegate_to: localhost

#  - set_fact:
#      decision: "{{ selection.user_input }}"

#- fail:
#    msg: "Installation aborted."
#  when: decision | lower == "n" or decision | lower == "no"
