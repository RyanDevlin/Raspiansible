- name: Gather device facts
  set_fact:
    devices: "{{ devices | default([]) + [ {item: { 'model': ansible_devices[item]['model'], 'host': ansible_devices[item]['host'], 'size': ansible_devices[item]['size'] } } ] }}"
  with_items: "{{ ansible_facts['devices'] }}"
  when: '"loop" not in item' # We don't care about loop devices

- debug:
    msg: 
      - "==========================================================="
      - "The following devices have been found on this machine:"
      - "==========================================================="
- name: List located devices
  debug:
    msg: "{{ devices }}"

- name: Create a list of device names
  set_fact:
    dev_names: "{{  dev_names | default([]) + [lookup('dict', item) | json_query('key')] }}"
  loop: "{{ devices }}"
  no_log: true

- block:
  - pause:
      prompt: 'Please type the name of the device you wish to install Raspbian on. Your choices are {{ dev_names | to_yaml }}'
    register: selection
    delegate_to: localhost

  - set_fact:
      target: "{{ selection.user_input }}"

- fail:
    msg: "ERROR: The device '{{ target }}' was not found in the list above."
  when: 'target not in dev_names'

- debug:
    msg: "You've selected '{{ target }}'."

- block:
  - pause:
      prompt: "Do you wish to continue with the installation (y/n)?"
    register: selection
    delegate_to: localhost

  - set_fact:
      decision: "{{ selection.user_input }}"

- fail:
    msg: "Installation aborted."
  when: decision | lower == "n" or decision | lower == "no"
